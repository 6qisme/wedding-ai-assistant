# ai_core.py

import os
from openai import OpenAI

# Retrieve the API key from environment variables and initialize the OpenAI client.
# This clent is the sole entry point for all communications with the OpenAI API.

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def get_ai_reply(context: str, user_question: str) -> str:
    """
    Calls the OpenAI API to generate a reply based on the provided
    context and user question.

    :param context: All information about the wedding.
    :param user_question: The original question string from user.
    :return: The reply string generated by the OpenAI model.
    """
    try:
        # Construct the prompt and send the request to the OpenAI API.
        completion = client.chat.completions.create(model="gpt-4.1-nano",
        messages=[
            {
                "role": "system",
                "content": f"""
                你是一位熱情且友善的婚禮AI助理。
                你的任務是根據以下提供的「婚禮資訊」，只回答與這場婚禮相關的問題。
                請用繁體中文、親切有禮的語氣回覆。你的回覆應該要簡潔扼要。
                絕對不要回答任何與婚禮資訊無關的問題。
                如果使用者問候你，請簡單問候即可。
                ---
                婚禮資訊:{context}
                ---
                """
                
            },
            {
                "role": "user",
                "content": user_question
            }
        ],
        # Limit the max token.
        max_tokens=150
        )
        return completion.choices[0].message.content
    except Exception as e:
        print(f"呼叫 OpenAI API時發生錯誤: {e}")
        # In case of an API error, return a safe default message.
        return "抱歉，目前暫時沒辦法回答問題～請稍後再嘗試，謝謝你～"
